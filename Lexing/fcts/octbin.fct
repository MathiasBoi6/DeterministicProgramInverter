(define (octbin x)
  (case x
    ((1) (return (make 1)))
    ((2) (return (make cons (make 0) (make 1))))
    ((3) (return (make cons (make 1) (make 1))))
    ((4) (return (make cons (make 0) (make cons (make 0) (make 1)))))
    ((5) (return (make cons (make 1) (make cons (make 0) (make 1)))))
    ((6) (return (make cons (make 0) (make cons (make 1) (make 1)))))
    ((7) (return (make cons (make 1) (make cons (make 1) (make 1)))))
    ((cons x1 xs)
     (let ((m) (octbin xs))
       (case x1
         ((0) (return (make cons (make 0) (make cons (make 0) (make cons (make 0) m)))))
         ((1) (return (make cons (make 1) (make cons (make 0) (make cons (make 0) m)))))
         ((2) (return (make cons (make 0) (make cons (make 1) (make cons (make 0) m)))))
         ((3) (return (make cons (make 1) (make cons (make 1) (make cons (make 0) m)))))
         ((4) (return (make cons (make 0) (make cons (make 0) (make cons (make 1) m)))))
         ((5) (return (make cons (make 1) (make cons (make 0) (make cons (make 1) m)))))
         ((6) (return (make cons (make 0) (make cons (make 1) (make cons (make 1) m)))))
         ((7) (return (make cons (make 1) (make cons (make 1) (make cons (make 1) m))))))))))